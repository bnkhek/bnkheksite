{"version":3,"sources":["Images/Heart.png","Components/Navbar.js","Routes/App.js","Routes/About.js","Routes/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","App","useState","clicked","setClicked","button_classes","onClick","console","log","id","class","type","top","when","right","left","src","rcel","alt","height","About","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d6337bee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Heart.6db629af.png\";","import React, { useState } from \"react\";\r\nimport \"../Routes/App.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <NavLink to=\"/\">\r\n        <p className=\"route\">Home</p>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/About\">\r\n        <p className=\"route\">About</p>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./hamburger.css\";\r\nimport Navbar from \"../Components/Navbar.js\";\r\nimport rcel from \"../Images/Heart.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nfunction App() {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  function menuClickHandler() {\r\n    console.log(\"Click\");\r\n    setClicked(!clicked);\r\n  }\r\n\r\n  let menuStatus = clicked ? \"open\" : \"closed\";\r\n  let button_classes = clicked\r\n    ? \"hamburger hamburger--collapse is-active\"\r\n    : \"hamburger hamburger--collapse \";\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <body className=\"App-body\">\r\n        <button\r\n          onClick={menuClickHandler}\r\n          id=\"hamburger\"\r\n          class={button_classes}\r\n          type=\"button\"\r\n        >\r\n          <span class=\"hamburger-box\">\r\n            <span class=\"hamburger-inner\"></span>\r\n          </span>\r\n        </button>\r\n\r\n        <Slide top when={clicked}>\r\n          <div className={clicked ? \"navbar\" : \"navbar hidden\"}>\r\n            <Navbar />\r\n          </div>\r\n        </Slide>\r\n\r\n        <div className=\"page page1\">\r\n          <h1 id=\"name\">Brandon Khek</h1>\r\n          <p className=\"tagline\">\r\n            <strong>Astrophysics Student at Rice University</strong>\r\n          </p>\r\n          <p>\r\n            <i class=\"arrow down\"></i>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"page page2\">\r\n          <div class=\"parallax\">\r\n            <p className=\"caption\">\r\n              \"Mock Bike\" O-Week 2020 - I'm on the right!\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <Slide right>\r\n              <div>\r\n                <h2>Welcome to my website!</h2>\r\n                <p>I actually made this one from scratch in React.js.</p>\r\n              </div>\r\n            </Slide>\r\n            <Slide left>\r\n              <p>But enough about the site... who am I?</p>\r\n            </Slide>\r\n          </div>\r\n          <p>\r\n            <i class=\"arrow down\"></i>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"page page3\">\r\n          <h1>\r\n            <strong>Teaching</strong>\r\n          </h1>\r\n          <h2>RCEL Elite Tech Camp</h2>\r\n          <img src={rcel} alt=\"RCEL Class Photo\" height=\"500vh\" />\r\n          <p>\r\n            Over the summer of 2020 I had the pleasure of teaching 28 high\r\n            school students machine learning in Python through RCEL - Rice\r\n            Center for Engineering Leadership - technology camp. We used anomaly\r\n            detection algorithms to analyze meteorological data! This is one of\r\n            our classes trying to make a heart.\r\n          </p>\r\n          <h2>COLL</h2>\r\n          <p>\r\n            COLL is a class code, short for COLLege course, which are\r\n            student-taught courses! After some training, Rice students can teach\r\n            a COLL course on anything they'd like, and I'm working on doing this\r\n            soon! Stay tuned for a syllabus :)\r\n          </p>\r\n\r\n          <h2>Rice Splash</h2>\r\n\r\n          <p>\r\n            There's a really cool organization on campus called Rice Splash, in\r\n            which students at Rice can teach middle/high school students about\r\n            any topic they want. I'm going to be teaching this fall about\r\n            multivariable calculus. Ambitious indeed, but I'm confident the\r\n            material can be simplified enough and still have them learn.\r\n          </p>\r\n\r\n          <p>\r\n            <i class=\"arrow down\"></i>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"page page4\">\r\n          <h1>Research</h1>\r\n          <h2>Gravitational Waves from Self-Ordering Scalar Fields</h2>\r\n          <p>\r\n            I'm studying the gravitational wave energy density from\r\n            self-ordering scalar fields, particularly the Higgs field. Fancy\r\n            talk for saying that the Higgs field (associated with Higgs boson)\r\n            is inhomogeneous (isn't uniform) in space, and as it tries to relax,\r\n            or become homogeneous, it generates gravitational waves. Woah!\r\n          </p>\r\n\r\n          <h2>Some Other Research</h2>\r\n          <p>\r\n            Particle physics is suprisingly computational. To put it into\r\n            perspective, the Large Hardon Collider collected about 5 petabytes\r\n            of data when looking for the Higgs Boson. We need complex algorithms\r\n            to filter out this noise and give us the good stuff! I'm going to\r\n            explore the programming side of physics after I'm done with my\r\n            current project.\r\n          </p>\r\n          <p>\r\n            <i class=\"arrow down\"></i>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"page page5\">\r\n          <h1>Outreach</h1>\r\n          <h2>SpaceVision 2021</h2>\r\n          <p>\r\n            My co-chair and I won the SEDS (Students for the Exploration and\r\n            Development of Space) USA Chapter bid for SpaceVision 2021, one of\r\n            the largest student-run conferences in the world. We're working with\r\n            Space Center Houston (visitor center of the Johnson Space Center),\r\n            other SEDS Chapters, the national SEDS advisory board, and fellow\r\n            SEDS members to plan this event of 500+ people! The current 3 day\r\n            conference schedule includes topics ranging from intense\r\n            computational work to international space policy.\r\n          </p>\r\n          <h2>TEDxRice</h2>\r\n          <p>ðŸ‘€</p>\r\n          <p>\r\n            <i class=\"arrow down\"></i>\r\n          </p>\r\n        </div>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./hamburger.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../Components/Navbar.js\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nfunction About() {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  function menuClickHandler() {\r\n    console.log(\"Click\");\r\n    setClicked(!clicked);\r\n  }\r\n\r\n  let menuStatus = clicked ? \"open\" : \"closed\";\r\n  let button_classes = clicked\r\n    ? \"hamburger hamburger--collapse is-active\"\r\n    : \"hamburger hamburger--collapse \";\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <body className=\"App-body\">\r\n        <button\r\n          onClick={menuClickHandler}\r\n          id=\"hamburger\"\r\n          class={button_classes}\r\n          type=\"button\"\r\n        >\r\n          <span class=\"hamburger-box\">\r\n            <span class=\"hamburger-inner\"></span>\r\n          </span>\r\n        </button>\r\n\r\n        <Slide top when={clicked}>\r\n          <div className={clicked ? \"navbar\" : \"navbar hidden\"}>\r\n            <Navbar />\r\n          </div>\r\n        </Slide>\r\n\r\n        <div>\r\n          <h1>About Me</h1>\r\n          <p>(Outside of work!)</p>\r\n        </div>\r\n\r\n        <p>I like to play tennis, chess, and skateboard.</p>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport About from \"./About\";\r\nimport Routes from \".\";\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n/*ReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route exact path=\"/About\" component={About} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n//serviceWorker.unregister();\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Routes/App\";\r\nimport About from \"./Routes/About\";\r\nimport Routes from \"./Routes\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n/*ReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}